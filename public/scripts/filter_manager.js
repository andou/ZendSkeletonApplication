// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.FilterManager = (function() {
    function FilterManager(ref) {
      this.ref = ref;
      this.checkAllOption = __bind(this.checkAllOption, this);
      this.clearAllChecked = __bind(this.clearAllChecked, this);
      this.initAllOption = __bind(this.initAllOption, this);
      this.findSelectAll = __bind(this.findSelectAll, this);
      this.setInteractions = __bind(this.setInteractions, this);
      this.filter = this.ref.find('li > a');
      this.all = this.findSelectAll();
      this.all.addClass('active');
      this.initAllOption();
      this.setInteractions();
      event_emitter.addListener('CHECK_ALL_OPTION', this.checkAllOption);
    }

    FilterManager.prototype.setInteractions = function() {
      return this.filter.click(function(e) {
        var brand, tocheck;
        e.preventDefault();
        tocheck = $(e.currentTarget);
        brand = tocheck.data('brand');
        tocheck.toggleClass('active');
        return event_emitter.emitEvent('BRAND_CHANGE', [brand, tocheck.hasClass('active')]);
      });
    };

    FilterManager.prototype.findSelectAll = function() {
      var _toreturn;
      _toreturn = '';
      this.filter.each(function() {
        var attr_data;
        attr_data = $(this).attr('data-brand');
        if (attr_data === 'all') {
          return _toreturn = $(this);
        }
      });
      return _toreturn;
    };

    FilterManager.prototype.initAllOption = function() {
      var _this = this;
      return this.all.click(function(e) {
        var tocheck;
        e.preventDefault();
        tocheck = $(e.currentTarget);
        _this.clearAllChecked();
        if (!tocheck.hasClass('active')) {
          tocheck.toggleClass('active');
          return event_emitter.emitEvent('SHOW_ALL_MARKERS');
        }
      });
    };

    FilterManager.prototype.clearAllChecked = function() {
      return this.filter.each(function() {
        var attr_data;
        attr_data = $(this).attr('data-brand');
        if (attr_data !== 'all') {
          return $(this).removeClass('active');
        }
      });
    };

    FilterManager.prototype.checkAllOption = function(length) {
      if (length !== 0 && this.all.hasClass('active')) {
        return this.all.removeClass('active');
      } else if (length === 0) {
        return this.all.addClass('active');
      }
    };

    return FilterManager;

  })();

}).call(this);
