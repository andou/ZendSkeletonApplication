// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.MapController = (function() {
    function MapController(ref) {
      this.ref = ref;
      this.tabChanged = __bind(this.tabChanged, this);
      this.setFilterInteraction = __bind(this.setFilterInteraction, this);
      this.setInteractions = __bind(this.setInteractions, this);
      this.current_tab = "stores";
      this.tab_bar = this.ref.find('.toolbar-tabber');
      this.stores_tab = this.tab_bar.find('.js-stores_tab');
      this.direction_tab = this.tab_bar.find('.js-direction_tab');
      this.general_content = this.ref.find('.toolbar-content');
      this.stores_content = this.general_content.find('.stores-content');
      this.direction_content = this.general_content.find('.direction-content');
      this.filter_btn = this.stores_content.find('.action-bar >a.filter');
      this.stores_content_searchResult = this.stores_content.find('#content #searchResult');
      this.stores_content_filterList = this.stores_content.find('#content .filterList');
      event_emitter.addListener("CURRENT_TAB_IS_CHANGED", this.tabChanged);
      this.setInteractions();
      this.setFilterInteraction();
    }

    MapController.prototype.setInteractions = function() {
      var _this = this;
      this.stores_tab.click(function(e) {
        var stores_tab;
        e.preventDefault();
        if (_this.current_tab !== "stores") {
          stores_tab = $(e.currentTarget);
          stores_tab.toggleClass('current');
          _this.direction_tab.toggleClass('current');
          _this.stores_content.show();
          _this.direction_content.hide();
          _this.current_tab = "stores";
          return event_emitter.emitEvent("CURRENT_TAB_IS_CHANGED");
        }
      });
      return this.direction_tab.click(function(e) {
        var direction_tab;
        e.preventDefault();
        if (_this.current_tab !== "directions") {
          direction_tab = $(e.currentTarget);
          direction_tab.toggleClass('current');
          _this.stores_tab.toggleClass('current');
          _this.direction_content.show();
          _this.stores_content.hide();
          _this.current_tab = "directions";
          return event_emitter.emitEvent("CURRENT_TAB_IS_CHANGED");
        }
      });
    };

    MapController.prototype.setFilterInteraction = function() {
      var _this = this;
      return this.filter_btn.click(function(e) {
        var filter_btn;
        filter_btn = $(e.currentTarget);
        console.log(filter_btn);
        if (_this.current_tab === "stores") {
          filter_btn.toggleClass('active');
          if (!filter_btn.hasClass('active')) {
            _this.stores_content_searchResult.hide();
            return _this.stores_content_filterList.show();
          } else {
            _this.stores_content_searchResult.show();
            return _this.stores_content_filterList.hide();
          }
        }
      });
    };

    MapController.prototype.tabChanged = function() {
      if (this.current_tab !== "stores") {
        this.stores_content_filterList.hide();
        this.stores_content_searchResult.show();
        return this.filter_btn.addClass('active');
      }
    };

    return MapController;

  })();

}).call(this);
